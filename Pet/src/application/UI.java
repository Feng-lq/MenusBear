package application;

import java.awt.*;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.util.Random;
import javax.imageio.ImageIO;
import javax.swing.text.IconView;
import javafx.animation.KeyFrame;
import javafx.animation.Timeline;
import javafx.application.Platform;
import javafx.beans.property.BooleanProperty;
import javafx.beans.property.SimpleBooleanProperty;
import javafx.geometry.Insets;
import javafx.geometry.Pos;
import javafx.geometry.Rectangle2D;
import javafx.scene.control.Label;
import javafx.scene.image.Image;
import javafx.scene.image.ImageView;
import javafx.scene.input.MouseEvent;
import javafx.scene.layout.VBox;
import javafx.scene.paint.Color;
import javafx.scene.shape.Polygon;
import javafx.stage.Screen;
import javafx.stage.Stage;
import javafx.util.Duration;

public class UI implements Runnable {
	private ImageView imageView;
	private int petID;
	private EventListener listen;
	private VBox messageBox;
	private CheckboxMenuItem itemWalkable;
	private CheckboxMenuItem autoPlay;
	private CheckboxMenuItem itemSay;
	private MenuItem itemSwitch;
	private Stage primaryStage;
	Thread thread;
	double x;
	private BooleanProperty isAwake = new SimpleBooleanProperty(false); // ?????????????????/?????
	
	String[] lxhStrings= {
			"???????????",
			"??????????~",
			"??????????????????????",
			"???????",
			"????????????????????????????????"
	};
	
	String[] biuStrings = {
			"??????????",
			"biu~",
			"?????????",
			"????????????????????????"
	};
	public UI(ImageView view, int pet, EventListener el, Stage s) {
		imageView = view;
		petID = pet;
		listen = el;
		primaryStage = s;
		// ????????????????????
		setPetState("Sleep");
		// ?imageView??????????????????????????????
		imageView.addEventHandler(MouseEvent.MOUSE_CLICKED, event -> toggleAwakeState());
		imageView.addEventHandler(MouseEvent.MOUSE_DRAGGED, event -> Dragged());
	}

	//?????????????????/?????
	private void toggleAwakeState() {
		if (isAwake.get()) {
			setPetState("Sleep"); // ??????????
		} else {
			setPetState("Awake"); // ??????????
		}
	}
	private void Dragged(){
		setPetState("Dragged");
	}

	public BooleanProperty isAwake() {
		return isAwake;
	}
	
	//???????????????????????????
	private void setPetState(String state) {
		String imageFileName;
		if (state.equals("Sleep")) {
			imageFileName = petID == 0 ? "/lxh/Sleep.gif" : "/biu/Sleep.gif"; // ????petID???????????
		} else if(state.equals("Awake")) {
			imageFileName = petID == 0 ? "/lxh/WakeUp.gif" : "/biu/WakeUp.gif"; // ????petID???????????
		}else if(state.equals("Dragged")){
			imageFileName = petID == 0 ? "/lxh/Drag.gif" : "/biu/drag.gif"; // ????petID???????????
		}
		else{
			imageFileName = "";
		}

		// ??????????????
		Image newImage = new Image(this.getClass().getResourceAsStream(imageFileName));
		imageView.setImage(newImage);

		// ??????
		isAwake.set(!isAwake().get()); // ??????
	}
	
	//??????????
	public void setTray(Stage stage) {
        SystemTray tray = SystemTray.getSystemTray();
        BufferedImage image;//???????
		try {
			// ??????????????????????
			PopupMenu popMenu = new PopupMenu();
			popMenu.setFont(new Font("??????", Font.PLAIN,18));
			
			itemSwitch = new MenuItem("????????");
			itemSwitch.addActionListener(e -> switchPet());
			
			itemWalkable = new CheckboxMenuItem("???????");
			autoPlay = new CheckboxMenuItem("????????");
			itemSay = new CheckboxMenuItem("??????");
			//??"???????"??"????????"??"??????"??????????
			itemWalkable.addItemListener(il -> {
				if(itemWalkable.getState()) { 
					autoPlay.setEnabled(false);
					itemSay.setEnabled(false);
				}
				else {
					autoPlay.setEnabled(true);
					itemSay.setEnabled(true);
				}
			});
			autoPlay.addItemListener(il -> {
				if(autoPlay.getState()) { 
					itemWalkable.setEnabled(false);
					itemSay.setEnabled(false);
				}
				else {
					itemWalkable.setEnabled(true);
					itemSay.setEnabled(true);
				}
			});
			itemSay.addItemListener(il -> {
				if(itemSay.getState()) { 
					itemWalkable.setEnabled(false);
					autoPlay.setEnabled(false);
				}
				else {
					itemWalkable.setEnabled(true);
					autoPlay.setEnabled(true);
				}
			});
			
			MenuItem itemShow = new MenuItem("???");
			itemShow.addActionListener(e -> Platform.runLater(() -> stage.show()));
			
			MenuItem itemHide = new MenuItem("????");
			//???setImplicitExit(false)??????stage.hide()???????stage
			//stage.hide()?????stage.close()
			itemHide.addActionListener(e ->{Platform.setImplicitExit(false);
				Platform.runLater(() -> stage.hide());});
			
			MenuItem itemExit = new MenuItem("???");
			itemExit.addActionListener(e -> end());
			
			popMenu.add(itemSwitch);
			popMenu.addSeparator();
			popMenu.add(itemWalkable);
			popMenu.add(autoPlay);
			popMenu.add(itemSay);
			popMenu.addSeparator();
			popMenu.add(itemShow);
			popMenu.add(itemHide);
			popMenu.add(itemExit);
			//???????????
			image = ImageIO.read(getClass().getResourceAsStream("icon.png"));
			TrayIcon trayIcon = new TrayIcon(image, "???????", popMenu);
	        trayIcon.setToolTip("???????");
	        trayIcon.setImageAutoSize(true);//????????????????????????????????????
	        tray.add(trayIcon);
		} catch (IOException | AWTException e) {
			e.printStackTrace();
		}
	}
	
	//????????
	private void switchPet() {
		imageView.removeEventHandler(MouseEvent.MOUSE_CLICKED, listen);//????????????
		//????????ID
		if(petID == 0) { 
			petID = 1; //????????
			imageView.setFitHeight(150);
			imageView.setFitWidth(150);
		}
		else { 
			petID = 0; //????????????
			imageView.setFitHeight(200);
			imageView.setFitWidth(200);
		}
        //listen = new EventListener(imageView,petID);
		/*
		 *???listen.petID????????bug: ????????????????????????????????????????????????????
		 *?????????????????????????????????????????????????????
		 *????????????????????listen.loadimg()?????????petID??
		 */
		listen.petID = petID;
		listen.mainimg(petID,0);//????????????????????????0??
		//???listen?????????????????????????
		imageView.addEventHandler(MouseEvent.MOUSE_CLICKED, listen);
	}
	
	//??????????????
	void end() {
		listen.mainimg(petID,99);//???????????????????????99????
		double time;
		//??????????1.5???????3??
		if(petID == 0) time = 1.5;
		else time = 3;
		//???Platform.runLater?????????Not on FX application thread;
		Platform.runLater(() ->setMsg("???~"));
		//????????????????
		new Timeline(new KeyFrame(
			     Duration.seconds(time), 
			     ae ->System.exit(0)))
			    .play();
	}
	
	//????????????
	public void addMessageBox(String message) {
		Label bubble = new Label(message);
		//??????????????????????????????????????????????
		bubble.setPrefWidth(100);
        bubble.setWrapText(true);//???????
        bubble.setStyle("-fx-background-color: DarkTurquoise; -fx-background-radius: 8px;");
        bubble.setPadding(new Insets(7));//?????????????
        bubble.setFont(new javafx.scene.text.Font(14));
        Polygon triangle = new Polygon(
        		0.0, 0.0,
        		8.0, 10.0, 
        		16.0, 0.0);//??????????????????????X??Y
        triangle.setFill(Color.DARKTURQUOISE);
        messageBox = new VBox();
        //VBox.setMargin(triangle, new Insets(0, 50, 0, 0));//???????????????????????
        messageBox.getChildren().addAll(bubble, triangle);
        messageBox.setAlignment(Pos.BOTTOM_CENTER);
      	messageBox.setStyle("-fx-background:transparent;");
        //????????????????????
        messageBox.setLayoutX(0);
      	messageBox.setLayoutY(0);
      	messageBox.setVisible(true);
      	//???????????????
      	new Timeline(new KeyFrame(
			     Duration.seconds(8), 
			     ae ->{messageBox.setVisible(false);}))
			    .play();
	}
	
    //??????????? ?????????????????????????????????????????????????
	public void run() {
		while(true) {
			Random rand = new Random();
			//???????????????????????????9~24???????????????????????????????
			long time = (rand.nextInt(15)+10)*1000;
			System.out.println("Waiting time:"+time);
			if(itemWalkable.getState() & listen.gifID == 0) {
				walk();
			}
			else if(autoPlay.getState() & listen.gifID == 0) {
				play();
			}
			else if(itemSay.getState() & listen.gifID == 0) {
				//??????????????????????????????????????????????
				String str = (petID == 0) ? lxhStrings[rand.nextInt(5)]:biuStrings[rand.nextInt(4)];
				Platform.runLater(() ->setMsg(str));
			}
			try {
				Thread.sleep(time);
			    } catch (InterruptedException e) {    
			     e.printStackTrace();
			    }
		} 
	}
	/*
	 * ???"??????"??????????????????????????
	 * ????????????????????????????
	 */
	public void setMsg(String msg) {
		
		Label lbl = (Label) messageBox.getChildren().get(0);
      	lbl.setText(msg);
      	messageBox.setVisible(true);
      	//???????????????
      	new Timeline(new KeyFrame(
			     Duration.seconds(4), 
			     ae ->{messageBox.setVisible(false);}))
			    .play();
	}
	
	/*
	 * ???"???????"?????????????????????
	 * ?????????????????????????????????
	 */
	void walk(){
		Rectangle2D screenBounds = Screen.getPrimary().getVisualBounds();
		x = primaryStage.getX();//stage??????????
		double maxx = screenBounds.getMaxX();//???????????
		double width = imageView.getBoundsInLocal().getWidth();//???imageView????????????.getMaxX();
		Random rand = new Random();
		double speed=10;//???????????
		//?????????????????????
        if(x+speed+width >= maxx | x-speed<=0)
        	return;
        //??????????????????????ms
		long time = (rand.nextInt(4)+3)*1000;
		System.out.println("Walking time:"+time);
		int direID = rand.nextInt(2);//???????????0???1???
		//???????????????????
		Image newimage;
		if(petID == 0)
			newimage = new Image(this.getClass().getResourceAsStream("/lxh/??????w"+direID+".gif"));
		else {
			newimage = new Image(this.getClass().getResourceAsStream("/biu/biuw"+direID+".gif"));
		}
		imageView.setImage(newimage);
		//???
		Move move = new Move(time, imageView, direID, primaryStage, listen);
		thread = new Thread(move);
		thread.start();
	}
	/*
	 * ???"????????"??????????????????????
	 * ??????????????????????????????????????????
	 * ?????????????????????????????????
	 */
	void play() {
		Random rand = new Random();
		int gifID;
		double time = 4;
		//gifID????????????????????????????????????????????????
		if(petID == 0) {
			gifID = rand.nextInt(7)+5;
		}
		else
			gifID = rand.nextInt(7)+7;
		listen.loadImg(petID, gifID, time);
	}
	public ImageView getImageView() {
		return imageView;
	}

	public void setImageView(ImageView imageView) {
		this.imageView = imageView;
	}

	public VBox getMessageBox() {
		return messageBox;
	}

	public void setMessageBox(VBox messageBox) {
		this.messageBox = messageBox;
	}
	
}
